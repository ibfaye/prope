buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

plugins {
	id "java"
	id "idea"
	id "eclipse"
	id "application"
	id "jacoco"
	id "maven"
	id "maven-publish"
	id "findbugs"
	id "com.github.kt3k.coveralls" version "2.4.0"
    id "com.jfrog.bintray" version "1.3.1"
}

publishing {
	publications {
		Bintray(MavenPublication) {
			from components.java
			groupId 'uniba-dsg'
            		artifactId 'prope'
            		version '1.0.0'
		}
	}
}

bintray {   
    user = 'bintray_user'
    key = 'bintray_api_key'
	publications = ['Bintray']
    pkg {
        repo = 'prope'
        name = 'prope'
        userOrg = 'uniba-dsg'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/uniba-dsg/prope.git'
		version {
            name = '1.0.0-Final'
            desc = 'PROcess-aware information systems Portability mEtrics suite 1.0.0 final'
            vcsTag = 'v1.0.0'
        }
    }
}

mainClassName = "prope.Prope"

repositories {
	jcenter()
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
		}
	}
}

dependencies {
	compile 'net.lingala.zip4j:zip4j:1.3.+'
	compile 'org.apache.commons:commons-io:1.3.+'
	compile 'uniba-dsg:bpp:1.0.0'
	compile files('./lib/BPMNspector.jar')
	testCompile group: 'junit', name: 'junit', version: '4.+'
}

findbugs {
	ignoreFailures = true
	effort = "max"
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.7'
}

task deleteTmpDir(type: Delete){
	delete ('tmp')
}

run {
	if(project.hasProperty('args')){
		args project.args.split('\\s+')
	}
}

jar {
   from ( configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } ) {
   	    exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
   }
   manifest { attributes 'Main-Class': mainClassName }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

